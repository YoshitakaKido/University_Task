・プログラムの説明

ラベルmain内において、
1行目でfromが指すアドレスをレジスタ$t1に格納する。
2行目でtoが指すアドレスをレジスタ$t2に格納する。
3行目でレジスタ$t3に即値15をロードする。
4行目でレジスタ$t4に即値10をロードする。
5行目でレジスタ$t5に即値15をロードする。

上記の動作の後、ラベルloopに入る。ラベルloop以下では、
1行目でレジスタ$a0に レジスタ$t0の保持するアドレスを格納する。
2行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
3行目でレジスタ$toのアドレスを表示する。
4行目でレジスタ$a0に文字列":"のアドレスを格納する。
5行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
6行目で文字列":"を表示する。
7行目で$t0 + 0のアドレスの内容をレジスタ$a0に格納する。
8行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
9行目でレジスタ$a0の内容を表示する。
10行目でレジスタ$a0に改行を実行するための文字列"\n"のアドレスを格納する。
11行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
12行目で改行処理を実行する。
13行目で配列の要素はint型の為、次の要素を取り出すのに4バイト足し合わせる。
14行目で配列の全要素数に相当するレジスタ$t3から1を引く。
15行目で配列の要素を全部表示し終えているかどうかを評価する。表示し終えてなければラベルloopへ戻る
16行目でレジスタ$a0に改行を実行するための文字列"\n"のアドレスを格納する。
17行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
18行目で改行処理を実行する。
19行目でレジスタ$t1の保持するアドレスに-24を加えたものをレジスタ$t1に格納する。
20行目でレジスタ$t2の保持するアドレスに36を加えたものをレジスタ$t2に格納する。

上記の動作の後、ラベルloop2に入る。ラベルloop2以下では、
1行目で$t1 + 0のアドレスの内容をレジスタ$t6に格納する。
2行目で$t2 + 0 が示すメモリ番地にレジスタ$t6の内容を1ワードとして格納する。
3行目でレジスタ$t1の保持するアドレスから4を引いたものをレジスタ$t1に格納する。
4行目でレジスタ$t2の保持するアドレスから4を引いたものをレジスタ$t2に格納する。
5行目でレジスタ$t4の保持する値から1引いたものをレジスタ$t4に格納する。
6行目でレジスタ$t4の保持する値が0でなければラベルloop2へ。
7行目でレジスタ$t1の保持するアドレスに4を加えたものをレジスタ$t1に格納する。

上記の動作の後、ラベルloop3に入る。ラベルloop3以下では、
1行目でレジスタ$a0にレジスタ$t1の保持するアドレスを格納する。
2行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
3行目でレジスタ$t1の保持するアドレスを表示する。
4行目でレジスタ$a0に文字列":"のアドレスを格納する。
5行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
6行目で文字列":"を表示する。
7行目で$t1 + 0のアドレスの内容をレジスタ$a0に格納する。
8行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
9行目でレジスタ$a0の内容を表示。
10行目でレジスタ$a0に改行を実行するための文字列"\n"のアドレスを格納する。
11行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
12行目で改行処理を実行する。
13行目で配列の要素はint型の為、次の要素を取り出すのに4バイト足し合わせる。
14行目で配列の全要素数に相当するレジスタ$t3から1を引く。
15行目で配列の要素を全部表示し終えているかどうかを評価する。表示し終えてなければラベルloop3へ戻る
16行目で呼び出し側に戻る。
