・プログラムの説明
ラベルmain内において、
1行目でレジスタ$t0に即値0をロードする。
2行目でレジスタ$t5に即値１をロードする。
3行目でresult + 0が示すメモリ番地にレジスタ$t5の内容を1ワードとして格納する。
4行目でレジスタ$t1に即値2をロードする。
上記の動作の後、ラベルfor_kakeに入る。ラベルfor_kake内では、
1行目でレジスタ$t2に即値０をロードする。
2行目でレジスタ$t3に即値０をロードする。
上記の動作の後、ラベルfor_iに入る。ラベルfor_i内では、
1行目でレジスタ$t3の内容を２ビット左へ論理シフトしたものをレジスタ$t6に格納する。
2行目でresult + $t6のアドレスの内容をレジスタ$t5に格納する。
3行目でレジスタ$t5の値とレジスタ$t1の値で乗算を行う。
4行目でレジスタ$t4に乗算の結果を格納する。
5行目でレジスタ$t4に$t4 + $t2の価を格納する。
6行目でレジスタ$t5に即値10000をロードする。
7行目でレジスタ$t4の値とレジスタ$t5の値で除算を行う。
8行目で余りをレジスタ$t2に格納する。
9行目で商をレジスタ$t6に格納する。
10行目でレジスタ$t3の内容を２ビット左へ論理シフトしたものをレジスタ$t7に格納する。
11行目でresult + $t7が示すメモリ番地にレジスタ$t6の内容を1ワードとして格納する。
12行目でレジスタ$t3に１を加算する。
13行目でレジスタ$t3の値を比較する。$t0以下ならばラベルfor_iへ
14行目でレジスタ$t21の値を比較する。0以下ならばラベルelseへ
15行目でレジスタ$t0に１を加算する。
16行目でレジスタ$t0の内容を２ビット左へ論理シフトしたものをレジスタ$t5に格納する。
17行目でresult + $t5が示すメモリ番地にレジスタ$t2の内容を1ワードとして格納する。
ラベルelse内では、
1行目でレジスタ$t1に１を加算する。
2行目でレジスタ$t5に即値100を格納する。
3行目でレジスタ$t1の値を比較する。$t5以下ならばラベルfor_kakeへ
4行目でレジスタ$t3にレジスタ$t0の保持するアドレスを格納する。
上記の動作の後、ラベルprintに入る。print内では、
1行目でレジスタ$t3の内容を２ビット左へ論理シフトしたものをレジスタ$t5に格納する。
2行目でresult + $t5のアドレスの内容をレジスタ$a0に格納する。
3行目でprint_intのシステムコールコードは１
4行目で計算結果を表示する。
5行目でレジスタ$t3から１を減算する。
6行目でレジスタ$t3の値を比較する。０以上ならばラベルprintへ
7行目でasciizで保存したプリントする文字列のアドレスをレジスタ$a0に格納する。
8行目でprint_stringのシステムコールコードは４
9行目で改行する。
10行目で呼び出し側に戻る。
