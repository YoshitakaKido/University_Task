・プログラムの説明

ラベルmain内において、
1行目でレジスタ$t3に即値0を格納する。
2行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
3行目でレジスタ$a0に文字列">"のアドレスを格納する。
4行目で文字列">"を表示する。
5行目でsyscallで整数型を読み込む為にレジスタ$v0に5を格納する。
6行目で入力された整数を読み込みレジスタ$v0格納する。
7行目でレジスタ$a0にレジスタ$v0の保持するアドレスを格納する。
8行目でレジスタ$t1に即値0を格納する。
9行目でレジスタ$t0とレジスタ$t1の保持する値を比較し、レジスタ$t0の値がレジスタ$t1の値より小さければラベルloopへ
10行目でレジスタ$t1に即値10を格納する。
11行目でレジスタ$t0とレジスタ$t1の保持する値を比較し、レジスタ$t0の値がレジスタ$t1の値より大きければラベルloopへ
12行目でarrayが指すアドレスをレジスタ$t1に格納する。
13行目でレジスタ$t0を2ビット論理シフトしたものをレジスタ$t2に格納する。
14行目でレジスタ$t1にレジスタ$t1とレジスタ$t2を加算したものを格納する。
15行目で$t1 + 0のアドレスの内容をレジスタ$t2に格納する。
16行目でレジスタ$t2の値に1を加算してレジスタ$t2に格納する。
17行目でレジスタ%t2の内容をレジスタ$t1 + 0が示すアドレス番地に格納する。
18行目でレジスタ$a0にレジスタ$t0の保持するアドレスを格納する。
19行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
20行目で入力された整数が表示される。
21行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
22行目でレジスタ$a0に文字列"\n"のアドレスを表示する。
23行目で改行処理が行われる。
24行目でレジスタ$t1に即値0を格納する。
25行目でラベルmainに移動する。
上記の動作はラベルloopに移動しない限り終わることはない。
9行目か11行目でラベルloopへ移動した場合、ラベルloop内では、
1行目でレジスタ$a0にレジスタ$t3の保持するアドレスを格納する。
2行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
3行目でレジスタ$a0の保持する整数が表示される。
4行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
5行目でレジスタ$a0にcolonが指すアドレスを格納する。
6行目で文字列":"が表示される。
7行目でレジスタ$t1にarrayが指すアドレスを格納する。
8行目でレジスタ$t3を2ビット論理左シフトしたものをレジスタ$t2に格納する。
9行目でレジスタ$t1にレジスタ$t1とレジスタ$t2を加算したものを格納する。
10行目でレジスタ$t1 + 0のアドレスの内容をレジスタ$t1に格納する。
11行目でレジスタ$a0にレジスタ$t1の保持するアドレスを格納する。
12行目でsyscallでint型を表示する為にレジスタ$v0に1を格納する。
13行目でレジスタ$a0の保持する値を表示する。
14行目でsyscallでstring型を表示する為にレジスタ$v0に4を格納する。
15行目でstrが指すアドレスをレジスタ$a0に格納する。
16行目で改行処理が行われる。
17行目でレジスタ$t3の値に1を加算してレジスタ$t3に格納する。
18行目でレジスタ$t1に即値10を格納する。
19行目でレジスタ$t3の保持する値がレジスタ$t1の保持する値より小さければラベルloopへ
20行目で呼び出し側に戻る
